/*
 Uso de :host
 porque separa los estilos internos de un componente de sus estilos de diseño externos, 
 lo que hace que tus componentes sean más reutilizables y previene conflictos de estilos.
*/
:host {
    flex: 1; /* Permite que employee-grid ocupe todo el espacio disponible del padre */
    display: flex; /* Hace que el host sea un contenedor flex */
    min-height: 0; /* Permite que el contenido se reduzca si es necesario */
}

.employee-grid-infinite-container {
    display: grid;
    grid-template-rows: auto 1fr;
    grid-template-columns: 1fr;
    gap: 10px;
    width: 100%; // Ocupa todo el ancho disponible
    flex: 1; // Ocupa todo el espacio disponible del host
    min-height: 0; // Permite que el grid se reduzca si es necesario
    align-items: stretch; // Para que ambos elementos tengan la misma altura
}

// NO SIRVE
/* .employee-grid-infinite-container {
    display: flex; // Hacemos que este contenedor también sea un flex container
    flex-direction: column; // Apila sus elementos hijos (app-grid) verticalmente
    height: 100%; // Ocupa el 100% de la altura disponible de su propio padre
    // IMPORTANTE: El padre de este contenedor también debe tener una altura definida (ej. body, html, otro div)
      // para que 'height: 100%' tenga un efecto.
    overflow: hidden; /* Oculta cualquier desbordamiento si el contenido excede la altura
} */

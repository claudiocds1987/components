.grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 15px;
    margin-bottom: 20px;
    padding: 20px;
    border: 1px solid #ddd;
    border-radius: 4px;
    width: 100%;
    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.05);
}

.inputs-container {
    display: flex;
    flex-direction: column;
    gap: 5px;
}

.inputs-container .width {
    width: 100%;
}

.actions-container {
    display: flex;
    justify-content: flex-start;
    gap: 10px;
}

// Media Query para Tabletas (min-width: 600px) - 2 Columnas
@media (min-width: 600px) {
    .grid {
        // Dos columnas de campos y una columna 'auto' para las acciones.
        grid-template-columns: repeat(2, 1fr) auto;
        gap: 20px 15px;
        align-items: end;
    }

    .actions-container {
        // Para posicionar en la √∫ltima columna
        grid-column: -1 / -1;
        // Lo alinea verticalmente al centro.
        align-self: center;
        flex-direction: column;
    }
}

// Media Query para Escritorio (min-width: 1024px) - 3 Columnas + Acciones
@media (min-width: 1024px) {
    .grid {
        grid-template-columns: repeat(3, 1fr) 120px;
        gap: 20px;
        align-items: start;
    }

    .actions-container {
        // Posiciona en la √∫ltima columna usando l√≠neas negativas: de la pen√∫ltima a la √∫ltima l√≠nea.
        grid-column: -2 / -1;
        grid-row: 1 / 2;
        align-self: start;
        justify-content: flex-end;
        flex-direction: row;
    }
}

// Media Query para Monitores Grandes (min-width: 1440px)
@media (min-width: 1440px) {
    .grid {
        /* CLAVE: Definimos 5 columnas fijas y expl√≠citas: 4 para inputs, 1 para acciones. */
        grid-template-columns: repeat(4, 1fr) 120px;
        gap: 20px;
        align-items: start;
        /* No necesitamos grid-auto-flow: dense; si forzamos la posici√≥n y el salto. */
    }

    .inputs-container {
        /* Los inputs fluyen, ocupando 1 de las 4 columnas de inputs. */
        grid-column: span 1;
    }

    /* üõë SOLUCI√ìN: Forzar al 5to elemento (que es el 5to input) a la SEGUNDA fila.
       Esto asegura que la Columna 5 de la Fila 1 queda exclusivamente para las acciones. */
    .inputs-container:nth-child(5) {
        grid-column: 1 / 2; /* Comienza en la Columna 1 */
        grid-row: 2 / 3; /* Inicia en la Fila 2 */
    }

    /* Opcional: Para evitar que el input 9 (si existe) se desplace a√∫n m√°s
       Puedes repetir el patr√≥n cada 4 inputs: */
    .inputs-container:nth-child(9) {
        grid-column: 1 / 2; /* Comienza en la Columna 1 */
        grid-row: 3 / 4; /* Inicia en la Fila 3 */
    }
    /* (y as√≠ sucesivamente si tu lista de campos es muy larga) */

    .actions-container {
        /* CLAVE: Posiciona el contenedor de acciones expl√≠citamente en la √öLTIMA columna (la 5ta). */
        grid-column: 5 / 6;
        /* CLAVE: Lo mantiene fijo en la PRIMERA fila. */
        grid-row: 1 / 2;

        /* Estilos de alineaci√≥n */
        align-self: start;
        justify-content: flex-end;
        flex-direction: row;
    }
}
